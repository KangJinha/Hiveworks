<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="department">
	<resultMap type="department" id="deptMap">
		<id property="deptCode" column="dept_code"/>
		<result property="deptName" column="dept_name"/>
		<result property="deptUpstair" column="dept_upstair"/>
	</resultMap>
	
	<resultMap id="empMap" type="map">
		<result property="id" column="EMP_ID"/>
	    <result property="name" column="EMP_NAME"/>
	    <result property="leader" column="DEPT_LEADER"/>
	    <result property="position" column="POSITION"/>
	    <result property="job" column="JOB"/>
	    <result property="deptName" column="DEPTNAME"/>
	</resultMap>
 
 <select id="deptListAll" resultMap="deptMap">
 	SELECT t1.DEPT_CODE, t1.DEPT_NAME, LEVEL, t1.DEPT_UPSTAIR
    FROM (
        SELECT * FROM TBL_DEPARTMENT
        WHERE USE_YN = 'Y'
    ) t1
    START WITH t1.DEPT_UPSTAIR = '#'
    CONNECT BY PRIOR t1.DEPT_CODE = t1.DEPT_UPSTAIR
 </select>
 
 <select id="selectDeptByName" resultMap="deptMap">
 	SELECT * FROM TBL_DEPARTMENT WHERE DEPT_NAME = #{deptName}
 </select>
 
 <insert id="insertDept" parameterType="department" useGeneratedKeys="true" keyProperty="deptCode">
    INSERT INTO TBL_DEPARTMENT VALUES('DEP'||SEQ_DEPT_CODE.NEXTVAL, #{deptUpstair}, #{deptName}, DEFAULT)
    <selectKey resultType="string" keyProperty="deptCode" order="AFTER">
        SELECT DEPT_CODE FROM TBL_DEPARTMENT WHERE DEPT_CODE = (SELECT MAX(DEPT_CODE) FROM TBL_DEPARTMENT)
    </selectKey>
</insert>
 
 <update id="updateDept">
 	UPDATE TBL_DEPARTMENT SET DEPT_NAME = #{name}, DEPT_UPSTAIR= #{upstair} WHERE DEPT_CODE = #{code}
 </update>
 
 <update id="deleteDept">
 	UPDATE TBL_DEPARTMENT
    SET USE_YN = 'N'
    <choose>
        <when test="children != null and children.size() > 0">
            WHERE DEPT_CODE IN
            <foreach item="item" index="index" collection="children" open="(" separator="," close=")">
                #{item}
            </foreach>
            OR DEPT_CODE = #{deptCode}
        </when>
        <otherwise>
            WHERE DEPT_CODE = #{deptCode}
        </otherwise>
    </choose>
 </update>
 
 <select id="deptEmpList" resultMap="empMap">
<!--  	SELECT e.EMP_ID, e.EMP_NAME, e.DEPT_LEADER, p.CODE_NAME as POSITION, j.CODE_NAME as JOB
	FROM TBL_EMPLOYEE e
		JOIN (
		    SELECT DEPT_CODE
		    FROM TBL_DEPARTMENT
		    START WITH DEPT_CODE = #{deptCode}
		    CONNECT BY PRIOR DEPT_CODE = DEPT_UPSTAIR
		) d ON e.DEPT_CODE = d.DEPT_CODE
		LEFT JOIN TBL_CODE p ON e.POSITION_CODE = p.CODE_NO
		LEFT JOIN TBL_CODE j ON e.JOB_CODE = j.CODE_NO -->
 	SELECT e.EMP_ID, e.EMP_NAME, e.DEPT_LEADER, p.CODE_NAME as POSITION, j.CODE_NAME as JOB, d.DEPT_NAME as DEPTNAME
	FROM TBL_EMPLOYEE e
		JOIN (
		    SELECT DEPT_CODE, DEPT_NAME
		    FROM TBL_DEPARTMENT
		    WHERE DEPT_CODE = #{deptCode}
		) d ON e.DEPT_CODE = d.DEPT_CODE
		LEFT JOIN TBL_CODE p ON e.POSITION_CODE = p.CODE_NO
		LEFT JOIN TBL_CODE j ON e.JOB_CODE = j.CODE_NO
 </select>
 
 <update id="deptLeaderOn">
	BEGIN
		UPDATE TBL_EMPLOYEE SET DEPT_LEADER='Y' WHERE EMP_ID = #{id}
		UPDATE TBL_EMPLOYEE SET DEPT_LEADER='N' WHERE EMP_ID = #{oldId}
	END
 </update>
 
 <update id="deptLeaderOff">
 	UPDATE TBL_EMPLOYEE SET DEPT_LEADER='N' WHERE EMP_ID = #{id}
 </update>
 
</mapper>
