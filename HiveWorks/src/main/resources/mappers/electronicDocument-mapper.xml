<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/DTD/mybatis-3-mapper.dtd" >
<mapper namespace="edoc">

	<resultMap type="edoc" id="edocMap">
		<id column="edoc_no" property="edocNo" />
		<result column="EDOC_DOT_CODE" property="edocDotCode" />
		<result column="EDOC_TITLE" property="edocTitle" />
		<result column="EDOC_PRESERVE_PERIOD" property="edocPreservePeriod" />
		<result column="EDOC_DSG_CODE" property="edocDsgCode" />
		<result column="EDOC_CONTENT" property="edocContent" />
		<result column="EDOC_STARTDATE" property="edocStartDate" />
		<result column="EDOC_ENDDATE" property="edocEndDate" />
		<result column="EDOC_VACATION_COUNT" property="edocVacationCount" />
		<result column="EDOC_STATUS" property="edocStatus" />
		<result column="CREATER" property="creater" />
		<result column="CREATE_DATE" property="createDate" />
		<result column="FINALIZED_DATE" property="finalizedDate" />
		
		<!-- <collection property="approval" resultMap="approvalMap"/>
		<collection property="reference" resultMap="referenceMap"/>
		<collection property="attachFiles" resultMap="attachFileMap"/>
		<collection property="comments" resultMap="commentMap"/> -->
	</resultMap>
	
	<resultMap type="edocList" id="edocListMap">
		<result column="edoc_no" property="edocNo" />
		<result column="edoc_title" property="edocTitle" />
		<result column="emp_name" property="empName" />
		<result column="create_date" property="createDate" />
		<result column="finalized_date" property="finalizedDate" />
		<result column="edoc_dot_code" property="edocDotCode" />
		<result column="edoc_status" property="edocStatus" />
		<result column="pos_code" property="posCode"/>
	</resultMap>
	
	<resultMap type="edocSample" id="edocSampleMap">
		<id column="sample_no" property="sampleNo" />
		<result column="sample_dot_code" property="sampleDotCode" />
		<result column="SAMPLE_NAME" property="sampleName" />
		<result column="SAMPLE_DESC" property="sampleDesc" />
		<result column="SAMPLE_CONTENT" property="sampleContent" jdbcType="CLOB" />
		<result column="CREATER" property="creater" />
		<result column="CREATE_DATE" property="createDate" />
		<result column="MODIFIER" property="modifier" />
		<result column="MODIFY_DATE" property="modifyDate" />
		<result column="USE_YN" property="useYn" />
	</resultMap>
	
	<resultMap type="edocApproval" id="approvalMap">
		<id column="APRVL_NO" property="aprvlNo"/>
		<result column="APRVL_EDOC_NO" property="aprvlEdocNo"/>
		<result column="APRVL_APV_CODE" property="aprvlApvCode"/>
		<result column="APRVL_EMP_NO" property="aprvlEmpNo"/>
		<result column="APRVL_RANK" property="aprvlRank"/>
		<result column="APRVL_STATUS" property="aprvlStatus"/>
		<result column="APRVL_COMMENT" property="aprvlComment"/>
		<result column="APRVL_DATE" property="aprvlDate"/>
		<result column="APRVL_EMP_NAME" property="aprvlEmpName"/>
		<result column="APRVL_AUTO_FILENAME" property="aprvlAutoFilename"/>
	</resultMap>
	
	<resultMap type="edocAttachFile" id="attachFileMap">
		<id column="ATTACH_NO" property="attachNo"/>
		<result column="ATTACH_EDOC_REF" property="attachEdocRef"/>
		<result column="ATTACH_ORIGINAL_FILENAME" property="attachOriginalFilename"/>
		<result column="ATTACH_RENAMED_FILENAME" property="attachRenamedFilename"/>
	</resultMap>
	
	<resultMap type="edocComment" id="commentMap">
		<id column="COMM_NO" property="commNo"/>
		<result column="COMM_EDOC_NO" property="commEdocNo"/>
		<result column="CREATER" property="creater"/>
		<result column="CREATE_DATE" property="createDate"/>
		<result column="COMM_CONTENT" property="commContent"/>
	</resultMap>
	
	<resultMap type="edocReference" id="referenceMap">
		<id column="REFPER_NO" property="refperNo"/>
		<result column="REFPER_EDOC_NO" property="refperEdocNo"/>
		<result column="REFPER_EMP_NO" property="refperEmpNo"/>
		<result column="REFPER_STATUS" property="refperStatus"/>
	</resultMap>
	
	<select id="getEdocList" parameterType="hashmap" resultMap="edocListMap">
		SELECT D.EDOC_NO, D.EDOC_TITLE, DC.EMP_NAME, D.CREATE_DATE, D.EDOC_DOT_CODE,
		FN_EDOC_STATUS(#{emp_id}, D.CREATER, A.APRVL_STATUS, A.APRVL_EMP_NO, D.EDOC_STATUS, R.REFPER_EMP_NO, R.REFPER_STATUS) AS EDOC_STATUS
		FROM TBL_EDOC D
		    JOIN TBL_EMPLOYEE DC ON D.CREATER = DC.EMP_NO
		    JOIN TBL_EDOC_ACCESS_GRANT AG ON D.EDOC_DSG_CODE = AG.DSG_CODE
		    LEFT JOIN TBL_EDOC_APPROVAL A ON D.EDOC_NO = A.APRVL_EDOC_NO
		    LEFT JOIN TBL_EMPLOYEE AE ON A.APRVL_EMP_NO = AE.EMP_NO
		    LEFT JOIN TBL_EDOC_REFERENCE_PERSON R ON D.EDOC_NO = R.REFPER_EDOC_NO
		    LEFT JOIN TBL_EMPLOYEE RE ON r.refper_emp_no = RE.EMP_NO
		WHERE d.use_yn = 'Y' 
		    and (
		    	<if test='!status.equals("CHECK")'>
				    (d.edoc_status = 'DST100' 
				    <if test='status.equals("ALL")'>
				    	AND (AE.EMP_ID = #{emp_id})
				    </if>
			    	<if test='status.equals("WAIT")'>
			    		AND
					    (ae.emp_id = #{emp_id} AND A.APRVL_STATUS = 'W')
			    	</if>
			    	<if test='status.equals("EXPECT")'>
			    		AND
			    		(ae.emp_id = #{emp_id} AND A.APRVL_STATUS = 'P')
			    	</if>
			    	<if test='status.equals("PROCESS")'>
			    		AND
				    	(ae.emp_id = #{emp_id} AND A.APRVL_STATUS = 'A')
			    	</if>
				    )
		    	</if>
				<if test='status.equals("ALL") or status.equals("CHECK")'>
					<if test='status.equals("ALL")'>
					    or
					</if>
				    (d.edoc_status = 'DST200' AND (A.APRVL_RANK = 1 AND re.emp_id = #{emp_id} AND R.REFPER_STATUS = 'N'))
				</if>		    
		    
		    )
		ORDER BY 4 DESC
		<!-- SELECT * FROM(
		<if test='!status.equals("CHECK")'>
			SELECT D.EDOC_NO, D.EDOC_TITLE, DE.EMP_NAME, D.CREATE_DATE,
			D.EDOC_DOT_CODE, FN_EDOC_STATUS(E.EMP_NO, D.CREATER, A.APRVL_STATUS,
			D.EDOC_STATUS) AS EDOC_STATUS
			FROM TBL_EDOC D JOIN TBL_EDOC_APPROVAL A ON D.EDOC_NO = A.APRVL_EDOC_NO
			JOIN TBL_EMPLOYEE E ON A.APRVL_EMP_NO = E.EMP_NO
			JOIN TBL_EMPLOYEE DE ON D.CREATER = DE.EMP_NO
			WHERE D.USE_YN = 'Y' AND D.EDOC_STATUS = 'DST100'
			AND E.EMP_ID = #{emp_id}
			<if test="status != null">
				<choose>
					<when test='status.equals("WAIT")'>
						AND A.APRVL_STATUS = 'W'
					</when>
					<when test='status.equals("EXPECT")'>
						AND A.APRVL_STATUS = 'P'
					</when>
					<when test='status.equals("PROCESS")'>
						AND A.APRVL_STATUS = 'A'
					</when>
					<otherwise>
						AND NOT(A.APRVL_STATUS = 'X')
					</otherwise>
				</choose>
			</if>
		</if>
		<if test='status.equals("ALL") or status.equals("CHECK")'>
			<if test='status.equals("ALL")'>
			UNION
			</if>
			SELECT D.EDOC_NO, D.EDOC_TITLE, DE.EMP_NAME, D.CREATE_DATE, D.EDOC_DOT_CODE, 'APV_C' AS EDOC_STATUS
	        FROM TBL_EDOC D
		        JOIN TBL_EDOC_REFERENCE_PERSON R ON D.EDOC_NO = R.REFPER_EDOC_NO
		        JOIN TBL_EMPLOYEE E ON R.REFPER_EMP_NO = E.EMP_NO
		        JOIN TBL_EMPLOYEE DE ON D.CREATER = DE.EMP_NO
	        WHERE D.USE_YN = 'Y' AND R.REFPER_STATUS = 'N'
	        AND E.EMP_ID = #{emp_id}
		</if>
		) ORDER BY 4 -->
	</select>
	<select id="getEdocBox" parameterType="hashmap" resultMap="edocListMap">
		SELECT DISTINCT D.EDOC_NO, D.EDOC_TITLE, DC.EMP_NAME, D.CREATE_DATE, D.EDOC_DOT_CODE, 
			FN_EDOC_STATUS(#{emp_id}, D.CREATER, A.APRVL_STATUS, A.APRVL_EMP_NO, D.EDOC_STATUS, R.REFPER_EMP_NO, R.REFPER_STATUS) AS EDOC_STATUS
		FROM TBL_EDOC D
		    JOIN TBL_EMPLOYEE DC ON D.CREATER = DC.EMP_NO
		    JOIN TBL_EDOC_ACCESS_GRANT AG ON D.EDOC_DSG_CODE = AG.DSG_CODE
		    LEFT JOIN TBL_EDOC_APPROVAL A ON D.EDOC_NO = A.APRVL_EDOC_NO
		    LEFT JOIN TBL_EMPLOYEE AE ON A.APRVL_EMP_NO = AE.EMP_NO
		    LEFT JOIN TBL_EDOC_REFERENCE_PERSON R ON D.EDOC_NO = R.REFPER_EDOC_NO
		    LEFT JOIN TBL_EMPLOYEE RE ON r.refper_emp_no = RE.EMP_NO
		 
		 WHERE D.USE_YN = 'Y'
		 	<choose>
		 		<when test='status.equals("RETURN")'>
		 			AND D.EDOC_STATUS = 'DST300' AND (A.APRVL_RANK = 1 AND AE.EMP_ID = #{emp_id})
		 		</when>
		 		<otherwise>
		 			AND D.EDOC_STATUS = 'DST200'
		 			<choose>
		 				<when test='status.equals("WRITER")'>
		 					AND (A.APRVL_RANK = 1 AND AE.EMP_ID = #{emp_id})
		 				</when>
		 				<when test='status.equals("APPROVAL")'>
		 					AND (NOT(A.APRVL_RANK = 1) AND AE.EMP_ID = #{emp_id} AND A.APRVL_STATUS = 'A')
		 				</when>
		 				<when test='status.equals("READ")'>
		 					AND (R.REFPER_STATUS = 'Y' AND RE.EMP_ID = #{emp_id})
		 				</when>
		 			</choose>
		 		</otherwise>
		 	</choose>
		 	ORDER BY 4 DESC
		<!-- SELECT * FROM(
		결재자 목록에 있는 문서
		<if test='!status.equals("READ")'>
		SELECT D.EDOC_NO, D.EDOC_TITLE, DC.EMP_NAME, D.CREATE_DATE, D.FINALIZED_DATE,
			D.EDOC_DOT_CODE, FN_EDOC_STATUS(E.EMP_NO, D.CREATER, A.APRVL_STATUS,
			D.EDOC_STATUS) AS EDOC_STATUS, NULL AS POS_CODE
		FROM TBL_EDOC D JOIN TBL_EDOC_APPROVAL A ON D.EDOC_NO = A.APRVL_EDOC_NO
			JOIN TBL_EMPLOYEE E ON A.APRVL_EMP_NO = E.EMP_NO
			JOIN TBL_EMPLOYEE DC ON D.CREATER = DC.EMP_NO
			문서가 삭제되지 않은 상태
		WHERE D.USE_YN = 'Y' 
			<choose>
				상태가 반려라면 반려상태의 문서를
				<when test='status.equals("RETURN")'>
					AND D.EDOC_STATUS = 'DST300'
				</when>
				<otherwise>
					AND D.EDOC_STATUS = 'DST200'
				</otherwise>
			</choose>
					AND E.EMP_ID = #{emp_id}
			<choose>
				<when test='status.equals("WRITER") or status.equals("RETURN")'>
					AND DC.EMP_ID= #{emp_id}
				</when>
				<when test='status.equals("APPROVAL")'>
					AND A.APRVL_STATUS = 'A'
				</when>
			</choose>
		</if>
		참조자 목록에 있는 문서
		<if test='status.equals("ALL") or status.equals("READ")'>
			<if test='status.equals("ALL")'>
                UNION
            </if>
			SELECT D.EDOC_NO, D.EDOC_TITLE, DC.EMP_NAME, D.CREATE_DATE, D.FINALIZED_DATE,
				D.EDOC_DOT_CODE, 'READ' AS EDOC_STATUS, NULL AS POS_CODE
			FROM TBL_EDOC D
				JOIN TBL_EDOC_REFERENCE_PERSON R ON D.EDOC_NO = R.REFPER_EDOC_NO
				JOIN TBL_EMPLOYEE E ON R.REFPER_EMP_NO = E.EMP_NO
				JOIN TBL_EMPLOYEE DC ON D.CREATER = DC.EMP_NO
				문서가 삭제되지 않고, 참조 확인이 된 문서
			WHERE D.USE_YN = 'Y' AND R.REFPER_STATUS = 'Y'
				AND D.EDOC_STATUS = 'DST200'
				AND E.EMP_ID = #{emp_id}
		</if>
		<if test='status.equals("ALL")'>
			UNION
			SELECT D.EDOC_NO, D.EDOC_TITLE, DC.EMP_NAME, D.CREATE_DATE, D.FINALIZED_DATE,
				D.EDOC_DOT_CODE, NULL, AG.POS_CODE 
			FROM TBL_EDOC D
				JOIN TBL_EMPLOYEE DC ON D.CREATER = DC.EMP_NO
				JOIN TBL_EDOC_ACCESS_GRANT AG ON D.EDOC_DSG_CODE = AG.DSG_CODE
				문서가 삭제되지 않고, 권한 등급이 요청한 사람 등급보다 낮은 문서
			WHERE D.USE_YN = 'Y'
				AND D.EDOC_STATUS = 'DST200'
				AND TO_NUMBER(SUBSTR(POS_CODE,4)) >= TO_NUMBER(SUBSTR(#{posCode},4))
		</if>
	) ORDER BY 1 DESC -->
	</select>
	<select id="getEdocBoxAll" parameterType="hashmap" resultMap="edocListMap">
		SELECT D.EDOC_NO, D.EDOC_TITLE, DC.EMP_NAME, D.CREATE_DATE, D.EDOC_DOT_CODE
		FROM TBL_EDOC D
		    JOIN TBL_EMPLOYEE DC ON D.CREATER = DC.EMP_NO
		    JOIN TBL_EDOC_ACCESS_GRANT AG ON D.EDOC_DSG_CODE = AG.DSG_CODE
		 WHERE D.USE_YN = 'Y' AND D.EDOC_STATUS = 'DST200'
		 	AND TO_NUMBER(SUBSTR(POS_CODE,4)) >= TO_NUMBER(SUBSTR(#{posCode},4))
		 UNION
		 SELECT D.EDOC_NO, D.EDOC_TITLE, DC.EMP_NAME, D.CREATE_DATE, D.EDOC_DOT_CODE
		 FROM TBL_EDOC D
		    JOIN TBL_EMPLOYEE DC ON D.CREATER = DC.EMP_NO
		    JOIN TBL_EDOC_ACCESS_GRANT AG ON D.EDOC_DSG_CODE = AG.DSG_CODE
		    LEFT JOIN TBL_EDOC_APPROVAL A ON D.EDOC_NO = A.APRVL_EDOC_NO
		    LEFT JOIN TBL_EMPLOYEE AE ON A.APRVL_EMP_NO = AE.EMP_NO
		 WHERE D.USE_YN = 'Y' AND D.EDOC_STATUS = 'DST200'
		 	AND TO_NUMBER(SUBSTR(POS_CODE,4)) &lt; TO_NUMBER(SUBSTR(#{posCode},4))
		 	AND AE.EMP_ID = #{emp_id}
		 UNION
		 SELECT D.EDOC_NO, D.EDOC_TITLE, DC.EMP_NAME, D.CREATE_DATE, D.EDOC_DOT_CODE
		 FROM TBL_EDOC D
		    JOIN TBL_EMPLOYEE DC ON D.CREATER = DC.EMP_NO
		    JOIN TBL_EDOC_ACCESS_GRANT AG ON D.EDOC_DSG_CODE = AG.DSG_CODE
		    LEFT JOIN TBL_EDOC_REFERENCE_PERSON R ON D.EDOC_NO = R.REFPER_EDOC_NO
		    LEFT JOIN TBL_EMPLOYEE RE ON r.refper_emp_no = RE.EMP_NO
		 WHERE D.USE_YN = 'Y' AND D.EDOC_STATUS = 'DST200'
		 	AND TO_NUMBER(SUBSTR(POS_CODE,4)) &lt; TO_NUMBER(SUBSTR(#{posCode},4))
		 	AND RE.EMP_ID = #{emp_id}
		 ORDER BY CREATE_DATE
	</select>
	<select id="getEmpData" resultType="hashmap" parameterType="int">
		SELECT E.EMP_NAME AS EMPNAME, D.DEPT_NAME AS DEPTNAME, C.CODE_NAME AS
		JOBNAME, E.EMP_NO AS EMPNO
		FROM TBL_EMPLOYEE E LEFT JOIN TBL_DEPARTMENT D ON E.DEPT_CODE =
		D.DEPT_CODE
		LEFT JOIN TBL_CODE C ON E.POSITION_CODE = C.CODE_NO
		WHERE E.EMP_NO = #{empNo}
	</select>

	<select id="getEdocSampleList" resultMap="edocSampleMap" parameterType="com.dna.hiveworks.model.code.DotCode">
		SELECT SAMPLE_NO, SAMPLE_NAME FROM TBL_EDOC_SAMPLE WHERE SAMPLE_DOT_CODE =
		#{edocDotCode}
	</select>

	<select id="getSample" resultMap="edocSampleMap" parameterType="string">
		SELECT * FROM TBL_EDOC_SAMPLE WHERE SAMPLE_NO = #{sampleNo}
	</select>

	<insert id="insertEdoc" parameterType="edoc">
		<selectKey keyProperty="edocNo" keyColumn="EDOC_NO"
			resultType="string" order="BEFORE">
			SELECT 'HI-' ||TO_CHAR(SYSDATE, 'YYYYMMDD') || '-' || LPAD((select
			count(*)+1 from TBL_EDOC WHERE EDOC_NO LIKE
			'%-'||TO_CHAR(SYSDATE,'YYYYMMDD')||'-%'), 3, '0') from dual
		</selectKey>
		INSERT INTO TBL_EDOC VALUES(
		#{edocNo},<!-- EDOC_NO -->
		#{edocDotCode},<!-- EDOC_DOT_CODE -->
		#{edocTitle},<!-- EDOC_TITLE -->
		#{edocPreservePeriod},<!-- EDOC_PRESERVE_PERIOD -->
		#{edocDsgCode},<!-- EDOC_DSG_CODE -->
		#{edocContent},<!-- EDOC_CONTENT -->
		#{edocStartDate},<!-- EDOC_STARTDATE -->
		#{edocEndDate},<!-- EDOC_ENDDATE -->		
		'DST100',<!-- EDOC_STATUS -->
		#{creater},<!-- CREATER -->
		SYSDATE,<!-- CREATE_DATE -->
		NULL,<!-- MODIFIER -->
		NULL,<!-- MODIFY_DATE -->
		DEFAULT,<!-- USE_YN -->
		NULL,<!-- FINALIZED_DATE -->
		#{edocVacationCount} <!-- EDOC_VACATION_COUNT -->
		)
	</insert>
	
	<insert id="insertEdocApproval" parameterType="edocApproval">
		INSERT INTO TBL_EDOC_APPROVAL(APRVL_NO, APRVL_EDOC_NO, APRVL_APV_CODE,
		APRVL_EMP_NO, APRVL_RANK, APRVL_STATUS, APRVL_DATE)
		VALUES
		(
		<!-- APRVL_NO, APRVL_EDOC_NO, APRVL_APV_CODE, APRVL_EMP_NO, APRVL_RANK, 
			APRVL_STATUS -->
		SEQ_APRVL_NO.NEXTVAL, #{aprvlEdocNo}, #{aprvlApvCode}, #{aprvlEmpNo},
		#{aprvlRank}, #{aprvlStatus},
		<choose>
			<when test="aprvlRank == 1">
				SYSDATE
			</when>
			<otherwise>
				NULL
			</otherwise>
		</choose>
		)
	</insert>
	<insert id="insertEdocReference" parameterType="edocReference">
		INSERT INTO TBL_EDOC_REFERENCE_PERSON(REFPER_NO, REFPER_EDOC_NO,
		REFPER_EMP_NO, REFPER_STATUS)
		VALUES
		(
		<!-- REFPER_NO, REFPER_EDOC_NO, REFPER_EMP_NO, REFPER_STATUS -->
		SEQ_REFPER_NO.NEXTVAL, #{refperEdocNo}, #{refperEmpNo},
		#{refperStatus}
		)
	</insert>
	<insert id="insertEdocAttachFile" parameterType="edocAttachFile">
		INSERT INTO TBL_EDOC_ATTACHFILE(ATTACH_NO, ATTACH_EDOC_REF,
		ATTACH_ORIGINAL_FILENAME, ATTACH_RENAMED_FILENAME, CREATER,
		MODIFY_DATE)
		VALUES
		(
		<!-- ATTACH_NO, ATTACH_EDOC_REF, ATTACH_ORIGINAL_FILENAME, ATTACH_RENAMED_FILENAME, 
			CREATER, MODIFY_DATE -->
		SEQ_ATTACH_NO.NEXTVAL, #{attachEdocRef}, #{attachOriginalFilename},
		#{attachRenamedFilename}, #{creater}, NULL
		)
	</insert>
	
	<select id="selectElectronicDocument" parameterType="string" resultMap="edocMap">
		SELECT * 
		FROM TBL_EDOC D
<!-- 			LEFT JOIN TBL_EDOC_APPROVAL A ON E.EDOC_NO = A.APRVL_EDOC_NO
			LEFT JOIN TBL_EDOC_ATTACHFILE F ON E.EDOC_NO = F.ATTACH_EDOC_REF
			LEFT JOIN TBL_EDOC_REFERENCE_PERSON R ON E.EDOC_NO = R.REFPER_EDOC_NO
			LEFT JOIN TBL_EDOC_COMMENT C WHERE E.EDOC_NO = C.COMM_EDOC_NO -->
		WHERE D.EDOC_NO = #{edocNo}
	</select>
	<select id="selectElectronicDocumentApproval" parameterType="string" resultMap="approvalMap">
		SELECT A.*, E.EMP_NAME AS APRVL_EMP_NAME, 
			CASE
				WHEN A.APRVL_APV_CODE = 'APV002' THEN 'defaultRevoke.png'
				ELSE NVL(E.EMP_AUTO_FILENAME,'defaultApprove.png')
			END AS APRVL_AUTO_FILENAME
		FROM TBL_EDOC_APPROVAL A
			LEFT JOIN TBL_EMPLOYEE E ON A.APRVL_EMP_NO = E.EMP_NO
		WHERE APRVL_EDOC_NO = #{edocNo} 
		ORDER BY APRVL_RANK
	</select>
	<select id="selectElectronicDocumentAttachFiles" parameterType="string" resultMap="attachFileMap">
		SELECT * FROM TBL_EDOC_ATTACHFILE WHERE ATTACH_EDOC_REF = #{edocNo} ORDER BY ATTACH_NO
	</select>
	<select id="selectElectronicDocumentComments" parameterType="string" resultMap="commentMap">
		SELECT * FROM TBL_EDOC_COMMENT WHERE COMM_EDOC_NO = #{edocNo} ORDER BY COMM_NO
	</select>
	<select id="selectElectronicDocumentReference" parameterType="string" resultMap="referenceMap">
		SELECT * FROM TBL_EDOC_REFERENCE_PERSON WHERE REFPER_EDOC_NO = #{edocNo} ORDER BY REFPER_NO
	</select>
	
	<update id="processApproval" parameterType="edocApproval">
		UPDATE TBL_EDOC_APPROVAL SET APRVL_APV_CODE = #{aprvlApvCode}, APRVL_STATUS = 'A', APRVL_COMMENT = #{aprvlComment}, APRVL_DATE = SYSDATE WHERE APRVL_NO = #{aprvlNo}
	</update>
	
	<update id="referenceCheck" parameterType="_int">
		UPDATE TBL_EDOC_REFERENCE_PERSON SET REFPER_STATUS = 'Y' WHERE REFPER_NO = #{refperNo}
	</update>
	
	<update id="edocFinalize" parameterType="edoc">
		UPDATE TBL_EDOC SET EDOC_STATUS='DST200', FINALIZED_DATE = SYSDATE WHERE EDOC_NO = #{edocNo}
	</update>
	
	<update id="setNextApprovalStatus" parameterType="edocApproval">
		UPDATE TBL_EDOC_APPROVAL SET APRVL_STATUS = 'W' WHERE APRVL_NO = #{aprvlNo}
	</update>
	
	<select id="getAttachFile" parameterType="map" resultMap="attachFileMap">
		SELECT * FROM TBL_EDOC_ATTACHFILE WHERE ATTACH_EDOC_REF = #{attachEdocNo} AND ATTACH_RENAMED_FILENAME = #{attachRenamedFileName} 
	</select>
	
	<update id="updateAuto" parameterType="map">
		UPDATE TBL_EMPLOYEE
		SET
		<choose>
			<when test='renamedFilename != null and !renamedFilename.equals("")'>
				EMP_AUTO_FILENAME = #{renamedFilename}
			</when>
			<otherwise>
				EMP_AUTO_FILENAME = NULL
			</otherwise>
		</choose>
		WHERE EMP_NO = #{empNo}
	</update>
	
	<update id="cancleApproval" parameterType="edocApproval">
		UPDATE TBL_EDOC_APPROVAL SET APRVL_STATUS = 'X' WHERE APRVL_NO = #{aprvlNo}
	</update>
	
	<update id="revokeDocument">
		UPDATE TBL_EDOC SET EDOC_STATUS='DST300', FINALIZED_DATE = SYSDATE WHERE EDOC_NO = #{edocNo}
	</update>
	
</mapper>
